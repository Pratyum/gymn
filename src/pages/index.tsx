/* eslint-disable @typescript-eslint/no-unsafe-return */
/* eslint-disable @typescript-eslint/ban-types */
import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";

import { useState, type MouseEventHandler} from "react";

import { api } from "~/utils/api";

import { Button, Drawer, Grid, Image, User, Text } from "@geist-ui/core";
import { useToasts} from "@geist-ui/core";
import { Moon, Sun } from "@geist-ui/icons";

interface HomeProps {
  switchThemes:  MouseEventHandler<HTMLButtonElement>;
  themeType: {
    type: string
  };
  theme: (val: string | string[]) => void; 
}

const Home: NextPage<HomeProps> = ({ switchThemes, themeType}) => {
  const hello = api.example.hello.useQuery({ text: "from tRPC" });
  const [drawerOpen, setDrawerOpen] = useState(false)   

  const { setToast } = useToasts()
  const showToast = () => setToast({ text: 'Hello, user!', delay: 2000 , type:"success"})
  
  return (   
    <>
      <Head>
        <title>Gymn</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={themeType.type == "Dark" ? "dark" : ""}>
        <main className={`flex min-h-screen flex-col items-center justify-center bg-neutral-100 dark:bg-neutral-950 dark:bg-gradient-to-b dark:from-[#2e026d] dark:to-[#00000000]` } color="">
          <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <div className="container flex flex-col items-center justify-center h-14 lg:h-24">
            <Image height="100%" src={themeType.type == "Dark" ? "/gymn_WhiteTextLogo.svg" : "/gymn_BlackTextLogo.svg"} alt=''/>
          </div>
          
            <div className="grid grid-cols-1 gap-4 sm:grid-cols-2 md:gap-8">
              <Link
                className="flex max-w-xs flex-col gap-4 rounded-xl bg-neutral-900 p-4 text-neutral-100 hover:bg-white/20 dark:bg-white/10"
                href="https://create.t3.gg/en/usage/first-steps"
                target="_blank"
              >
                <h3 className="text-2xl font-bold">First Steps →</h3>
                <div className="text-lg">
                  Just the basics - Everything you need to know to set up your
                  database and authentication.
                </div>
              </Link>
              <Link
                className="lex max-w-xs flex-col gap-4 rounded-xl bg-neutral-900 p-4 text-neutral-100 hover:bg-white/20 dark:bg-white/10"
                href="https://create.t3.gg/en/introduction"
                target="_blank"
              >
                <h3 className="text-2xl font-bold">Documentation →</h3>
                <div className="text-lg">
                  Learn more about Create T3 App, the libraries it uses, and how
                  to deploy it.
                </div>
              </Link>
            </div>
            <p className="text-2xl text-neutral-950 dark:text-white">
              {hello.data ? hello.data.greeting : "Loading tRPC query..."}
            </p>

            <Grid.Container justify="center" >            
              <Button auto type="success" onClick={showToast}>Toast</Button>
              <Button auto type="secondary-light" onClick={() => setDrawerOpen(true)}>Drawer</Button>
            </Grid.Container>          

            <Drawer visible={drawerOpen} onClose={() => setDrawerOpen(false)} placement="right">
              <Drawer.Title>Drawer</Drawer.Title>
              <Drawer.Subtitle>This is a drawer</Drawer.Subtitle>
              <Drawer.Content>
                <p>Some content contained within the drawer.</p>
                <Button width={"100%"} onClick={() => setDrawerOpen(false)}>Close</Button>
              </Drawer.Content>
            </Drawer>
            <div>
              <User src="https://avatars.githubusercontent.com/u/102877738?v=4" name="Ricardo Amorim">
                <User.Link href="https://github.com/risixdzn">@risixdzn</User.Link>
              </User>
            </div>            
            <span>
              <Button width="auto" onClick={switchThemes} icon={themeType.type == "Dark" ? <Sun/> : <Moon/>}></Button>
            </span>            
          </div>
        </main>
      </div>      
    </>
  );
};

export default Home;
